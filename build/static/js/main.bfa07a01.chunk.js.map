{"version":3,"sources":["Header.js","Footer.js","PostTextContent.js","GetTextContent.js","Sidebar.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","appbar","alignItems","title","padding","spacing","Header","classes","Stack","className","AppBar","position","sx","backgroundColor","Typography","variant","footer","width","marginTop","Footer","align","color","button","margin","PostTextContent","dispatch","useDispatch","useState","postText","setPostText","handleOnClickPost","a","textsUrl","axios","post","headers","response","console","log","textUrl","data","id","get","textResponse","status","type","payload","textsResponse","Box","style","textAlign","TextField","placeholder","value","onChange","e","target","fullWidth","InputLabelProps","shrink","required","inputProps","maxLength","minLength","Button","onClick","disabled","GetTextContent","text","useSelector","state","handleOnClickDelete","delete","alert","rows","sa","bwt","split","lf","psi","lcp","length","date","component","border","marginBottom","Graphviz","dot","options","height","zoom","fit","zoomScaleExtent","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","Array","map","_","i","TableBody","rowname","scope","k","Sidebar","texts","showntext","setLoading","useEffect","getTexts","List","maxHeight","overflow","ListItem","disablepadding","ListItemButton","selected","ListItemText","primary","secondary","createTheme","shadows","palette","light","main","dark","contrastText","App","ThemeProvider","Container","fixed","Grid","container","item","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","React","ReactDOM","Provider","store","createStore","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfa07a01.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Stack,\r\n} from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  appbar: {\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Stack className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appbar} sx={{backgroundColor:\"primary.dark\"}}>\r\n        <Typography variant=\"h4\" className={classes.title}>\r\n          TextViz\r\n        </Typography>\r\n      </AppBar>\r\n      <AppBar position=\"static\" className={classes.appbar} sx={{backgroundColor:\"primary.main\"}}>\r\n        <Typography variant=\"subtitle1\" className={classes.title}>\r\n          文字列の接尾辞木を簡単に可視化できます。\r\n        </Typography>\r\n      </AppBar>\r\n    </Stack>\r\n  );\r\n}","import { makeStyles } from \"@mui/styles\";\r\nimport {\r\n    Typography\r\n} from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles({\r\n    footer: {\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n    }\r\n})\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.footer}>\r\n            <Typography align=\"center\" variant=\"body1\" color=\"primary\">©2021 Yuma Arakawa. All rights reserved.</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { TextField, Button, Box } from \"@mui/material\";\r\nimport axios from 'axios';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst PostTextContent = () => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [postText, setPostText] = useState('');\r\n\r\n  const handleOnClickPost = async () => {\r\n    const textsUrl = \"https://indextify.herokuapp.com/texts/\";\r\n    const response = await axios.post(textsUrl,postText, {\r\n      headers: {\r\n        \"Content-Type\" : \"text/plain\",\r\n      }\r\n    });\r\n\r\n    console.log(\"postresponse: \",response);\r\n\r\n    const textUrl = `https://indextify.herokuapp.com/text/${response.data.id}`;\r\n    const textResponse = await axios.get(textUrl);\r\n    console.log(textResponse.data);\r\n    if (textResponse.status === 200) {\r\n      dispatch({\r\n          type: \"GET_TEXT\",\r\n          payload: textResponse.data,\r\n      });\r\n    } else {\r\n      dispatch({\r\n          type: \"GET_TEXT\",\r\n          payload: null,\r\n      });\r\n    }\r\n\r\n    const textsResponse = await axios.get(textsUrl);\r\n    console.log(textsResponse.data);\r\n    dispatch({\r\n        type: \"GET_TEXTS\",\r\n        payload: textsResponse.data\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <div style={{ textAlign: 'center', padding: \"10px\"}}>\r\n        <div className=\"postBox\" style={{ width: '100%' }}>\r\n            <TextField\r\n              id=\"post-text\"\r\n              placeholder=\"接尾辞木を知りたい文字列を入力 (例) helloworld\"\r\n              value={postText}\r\n              onChange={(e) => setPostText(e.target.value)}\r\n              margin=\"normal\"\r\n              fullWidth\r\n              InputLabelProps={{ shrink: true }}\r\n              required\r\n              type=\"search\"\r\n              inputProps={{ title: '文字列', maxLength: 100, minLength: 0 }}\r\n            />\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleOnClickPost}\r\n              disabled={postText === ''}\r\n            >\r\n              送信\r\n            </Button>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PostTextContent;","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Paper,\r\n        Table,\r\n        TableBody,\r\n        TableCell,\r\n        TableContainer,\r\n        TableHead,\r\n        TableRow, \r\n        Button, \r\n        Box, \r\n        Typography } from \"@mui/material\";\r\nimport { Graphviz } from \"graphviz-react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst GetTextContent = () => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const text = useSelector((state) => state.text);\r\n\r\n  const handleOnClickDelete = async () => {\r\n    const textUrl = `https://indextify.herokuapp.com/text/${text.id}`;\r\n    const response = await axios.delete(textUrl);\r\n    if (response.status === 200)\r\n      alert(`正常に文字列${text.id}を削除しました。`);\r\n    else alert(`文字列${text.id}の削除に失敗しました。`);\r\n    dispatch({\r\n      type: \"GET_TEXT\",\r\n      payload: null,\r\n    });\r\n\r\n    const textsUrl = `https://indextify.herokuapp.com/texts/`;\r\n    const textsResponse = await axios.get(textsUrl);\r\n    console.log(textsResponse.data);\r\n    dispatch({\r\n      type: \"GET_TEXTS\",\r\n      payload: textsResponse.data,\r\n    });\r\n  };\r\n\r\n  const rows = (text !== null) &&\r\n    {\"sa\":text.sa,\"bwt\":text.bwt.split(\"\"),\"lf\":text.lf,\"psi\":text.psi,\"lcp\":text.lcp};\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n      <div className=\"getBox\" style={{ width: \"100%\" }}>\r\n        <div>\r\n          {text ? (\r\n            <div>\r\n              <Typography>文字列 {text.text}</Typography>\r\n              <Typography>\r\n                ID:{text.id} 長さ:{text.text.length} 送信日時:{text.date}\r\n              </Typography>\r\n              <Box\r\n                component=\"div\"\r\n                sx={{ border: \"1px solid black\", marginBottom: \"10px\" }}\r\n              >\r\n                <Graphviz\r\n                  dot={text.dot}\r\n                  options={{\r\n                    width: \"100%\",\r\n                    height: \"500px\",\r\n                    zoom: true,\r\n                    fit: true,\r\n                    zoomScaleExtent: [0.1, 10],\r\n                  }}\r\n                />\r\n              </Box>\r\n              <TableContainer component={Paper}>\r\n                  <Table aria-label=\"text index table\" size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>i</TableCell>\r\n                        {[...Array(text.text.length+1)].map((_,i)=>(<TableCell align=\"center\">{i}</TableCell>))}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {[\"sa\",\"bwt\",\"lf\",\"psi\",\"lcp\"].map((rowname)=>(\r\n                        <TableRow>\r\n                          <TableCell scope=\"row\">{rowname}</TableCell>\r\n                          {rows[rowname].map((k)=>(\r\n                            <TableCell align=\"center\">{k}</TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n              </TableContainer>\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleOnClickDelete}\r\n              >\r\n                選択している文字列を削除\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetTextContent;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { ListItem, ListItemButton, ListItemText, List, Box } from \"@mui/material\";\r\n\r\nimport { FixedSizeList } from \"react-window\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const texts = useSelector((state) => state.texts);\r\n    const showntext = useSelector((state) => state.text);\r\n\r\n    const [loading, setLoading] = useState('');\r\n    \r\n    useEffect(() => {\r\n        const getTexts = async () => {\r\n            const textsUrl = \"https://indextify.herokuapp.com/texts/\";\r\n            const response = await axios.get(textsUrl);\r\n            console.log(response.data);\r\n            dispatch({\r\n                type: \"GET_TEXTS\",\r\n                payload: response.data\r\n            })\r\n        }\r\n        setLoading(true);\r\n        getTexts();\r\n        setLoading(false);\r\n    }, [dispatch]);\r\n\r\n    const getFunctionGetById = (id) => {\r\n        return async () => {\r\n            const textUrl = `https://indextify.herokuapp.com/text/${id}`;\r\n            const response = await axios.get(textUrl);\r\n            console.log(response.data);\r\n            if (response.status === 200) {\r\n                dispatch({\r\n                    type: \"GET_TEXT\",\r\n                    payload: response.data,\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: \"GET_TEXT\",\r\n                    payload: null,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n          <List style={{ maxHeight: \"1000px\", overflow: \"auto\"}}>\r\n              {texts.map((text) => (\r\n                <ListItem component=\"div\" disablepadding>\r\n                  <ListItemButton onClick={getFunctionGetById(text.id)}\r\n                  selected={(showntext!==null && text.id===showntext.id) ? true : false}>\r\n                    <ListItemText primary={text.text} secondary={`ID:${text.id} Date:${text.date}`}></ListItemText>\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        </Box>\r\n    )\r\n  };\r\n  \r\n  export default Sidebar;","import { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport PostTextContent from \"./PostTextContent\";\nimport GetTextContent from \"./GetTextContent\";\nimport Sidebar from \"./Sidebar\";\n\nimport { Container, Grid, Stack } from \"@mui/material\";\n\n\n\nconst theme = createTheme({\n  shadows: [\"none\"],\n  palette: {\n    primary: {\n      light: '#4fb3bf',\n      main: '#00838f',\n      dark: '#005662',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#fff263',\n      main: '#fbc02d',\n      dark: '#c49000',\n      contrastText: '#000',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Header/>\n        <Container fixed style={{marginTop:\"10px\"}}>\n          <Grid container spacing={1}>\n            <Grid item xs={8}>\n              <Stack spacing={1}>\n                <PostTextContent/>\n                <GetTextContent/>\n              </Stack>\n            </Grid>\n            <Grid item xs={4}>\n              <Sidebar/>\n            </Grid>\n          </Grid>\n          <Footer/>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    texts: [],\r\n    text: null,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_TEXTS\":\r\n            return { ...state, texts: action.payload };\r\n        case \"GET_TEXT\":\r\n            return { ...state, text: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport reducer from \"./store\";\n\nimport { createStore } from \"redux\";\n\nconsole.log(\"React\",React);\nconsole.log(\"ReactDOM\",ReactDOM);\nconsole.log(\"Provider\",Provider);\nconsole.log(\"App\",App);\nconsole.log(\"reportWebVitals\",reportWebVitals);\nconsole.log(\"reducer\",reducer);\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}